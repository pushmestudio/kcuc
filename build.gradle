apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'war'
apply plugin: 'checkstyle'

// version = '1.0' // versionをつけると、生成されるwarの末尾にversionが付く
def defaultEncoding = 'UTF-8'
def deployTargetDir = '/opt/tomcat/webapps'
tasks.withType(AbstractCompile).each {
  it.options.encoding = defaultEncoding
}
tasks.withType(GroovyCompile).each {
  it.groovyOptions.encoding = defaultEncoding
}
[compileJava, compileTestJava].each {
  it.options.compilerArgs += ['-source', '1.8', '-target', '1.8']
}

repositories {
  jcenter()
  flatDir dirs: "${webAppDir}/WEB-INF/lib"
}

dependencies {
  // GroupId:ArtifactId:Versionの順で書く

  // ローカルファイル
  compile ':org.JSON-JSON-java:'

  // HttpServletなどを使用する場合には必要
  // providedCompile 'javax.servlet:javax.servlet-api:3.1'

  // Grassfishサーバーの場合はprovidedCompileでOK
  // https://jersey.github.io/documentation/latest/modules-and-dependencies.html
  compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.23'

  // swagger
  compile 'io.swagger:swagger-jersey2-jaxrs:1.5.10'

  // cloudant
  compile 'com.cloudant:cloudant-client:2.7.0'

  testCompile 'junit:junit:4.12'
}

// enclosed testが2回実行されることを防ぐ
test {
  exclude '**/*$*'
}

javadoc {
  options.charSet = defaultEncoding
}

// テストディレクトリはcheck対象としない
checkstyle {
  checkstyleTest.source = {}
}

war {
  archiveName 'kcuc.war'
}

// 生成されたwarを配置する、WARの名称変更が不要となったためただのコピーをしているだけのもはや不要なタスク
/* @deprecated */
task deploy(type: Exec) {
  description 'Deploy generated war file to ${deployTargetDir} directory'
  workingDir "${projectDir}/build/libs/"
  commandLine 'cp', '-v', war.archiveName, "${deployTargetDir}/"
}

/**
 * CheckstyleのEclipse環境における設定ファイルである.checkstyleを一括配布するためのタスク
 * subprojectsすべてに対してmasterが持っている.checkstyleを配布する
 */
task distCheckstyle(type:Copy) {
  description 'Distribute .checkstyle file to all subprojects for Eclipse'

  copy {
    from "${checkstyle.configDir}/.checkstyle"
    into "${project.rootDir}"
  }
}
// Eclipseの初期化タスクを呼んだ場合に必ず.checkstyleの配布も行われるようにする
distCheckstyle.mustRunAfter(":master:eclipseProject")
